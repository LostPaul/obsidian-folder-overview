name: Plugin Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build"
        required: true

permissions:
  contents: write  # Allow write access to repository contents

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract branch name
        id: extract_branch
        run: echo "BRANCH_NAME=$(git branch -r --contains ${GITHUB_SHA} | grep -v 'detached' | sed 's|origin/||' | xargs)" >> $GITHUB_ENV

      - name: Checkout main branch
        run: |
          git fetch origin  # Make sure to fetch the latest from the remote
          git checkout main  # Checkout the main branch

      - name: Update manifest.json
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          jq --arg version "$VERSION" '.version = $version' manifest.json > manifest-temp.json
          mv manifest-temp.json manifest.json

      - name: Check if manifest.json is changed
        run: |
          git diff --exit-code manifest.json || echo "manifest.json has changes"

      - name: Commit and push manifest.json update
        if: steps.Check-if-manifest-changed.outputs.changed == 'true'  # Only run if manifest.json has changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add manifest.json
          git commit -m "Update manifest.json to version $VERSION"
          git push https://x-access-token:${{ secrets.PAT }}@github.com/LostPaul/obsidian-folder-overview.git HEAD:main  # Use PAT for push

      - name: Checkout original branch
        run: |
          git fetch origin
          git checkout ${{ env.BRANCH_NAME }}
          git pull origin ${{ env.BRANCH_NAME }}

      - name: Prepare files for release
        run: |
          mkdir -p release
          cp main.js styles.css manifest.json release/

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "release/main.js,release/styles.css,release/manifest.json"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
